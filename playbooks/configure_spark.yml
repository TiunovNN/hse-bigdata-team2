---
- name: Configure spark
  hosts:
  - namenodes
  tasks:
  - name: Download spark
    ansible.builtin.unarchive:
      src: https://dlcdn.apache.org/spark/spark-3.5.3/spark-3.5.3-bin-without-hadoop.tgz
      dest: /home/hadoop/
      remote_src: yes
      creates: /home/hadoop/spark-3.5.3-bin-without-hadoop
      group: hadoop
      owner: hadoop
    retries: 5
    delay: 3
  - name: Get hadoop class
    ansible.builtin.shell: hadoop classpath
    become: yes
    become_user: hadoop
    become_method: sudo
    become_flags: '-i -S'
    register: HADOOP_CLASS_PATH
    changed_when: false


  - name: Configure spark environment variables in ~/.profile
    ansible.builtin.blockinfile:
      path: /home/hadoop/.profile
      append_newline: true
      prepend_newline: true
      marker: "# {mark} ANSIBLE MANAGED BLOCK SPARK"
      block: |
        export SPARK_HOME=/home/hadoop/spark-3.5.3-bin-without-hadoop
        export PATH=$PATH:$SPARK_HOME/bin
        export SPARK_DIST_CLASSPATH=$SPARK_HOME/jars/*:{{ HADOOP_CLASS_PATH.stdout }}
        export HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop
        export LD_LIBRARY_PATH=${HADOOP_HOME}/lib/native:$LD_LIBRARY_PATH


  - name: Edit spark-default.conf
    ansible.builtin.template:
      src: ./spark-defaults.conf.j2
      dest: /home/hadoop/spark-3.5.3-bin-without-hadoop/conf/spark-defaults.conf
    vars:
      namenode: "{{ groups['namenodes'] | map('extract', hostvars, 'ansible_hostname') | first }}"

  - name: Configure HDFS for Spark
    ansible.builtin.shell: "{{ item }}"
    become: yes
    become_user: hadoop
    become_method: sudo
    become_flags: '-i -S'
    loop:
      - /home/hadoop/hadoop-3.4.0/bin/hdfs dfs -mkdir -p /spark-logs

  - name: Create spark-history.service
    ansible.builtin.copy:
      src: ./spark-history.service
      dest: /etc/systemd/system/spark-history.service

  - name: Enable spark-history service
    ansible.builtin.systemd_service:
      daemon_reload: true
      enabled: true
      name: spark-history.service
      state: restarted


- name: Configure nginx
  hosts: jumpnodes
  vars:
    services:
    - {port: 18080, name: 'spark-history'}
    namenode: "{{ groups['namenodes'] | map('extract', hostvars, 'ansible_hostname') | first}}"
  tasks:
    - name: configure /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: ".*{{ hostvars[item]['ansible_hostname'] }}$"
        line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item]['ansible_hostname'] }} {{hostvars[item]['ansible_fqdn'] }}"
        state: present
      with_items: "{{ groups['namenodes']}}"

    - name: Ensure installed nginx
      ansible.builtin.apt:
        name:
          - nginx
        state: latest
        update_cache: yes
    - name: Add a user to a password file and ensure permissions are set
      community.general.htpasswd:
        path: /etc/nginx/htpasswd
        name: "{{ nginx_user }}"
        password: "{{ nginx_password }}"
        owner: root
        group: www-data
        mode: 0640
        state: present

    - name: Configure proxy
      ansible.builtin.template:
        src: ./nginx.j2
        dest: "/etc/nginx/sites-available/{{ item.name }}"
      with_items: "{{ services }}"
      notify: Restart nginx

    - name: Enable proxy
      ansible.builtin.file:
        src: "/etc/nginx/sites-available/{{ item.name}}"
        dest: "/etc/nginx/sites-enabled/{{ item.name }}"
        state: link
      with_items: "{{ services }}"
      notify: Restart nginx

    - name: Disable default
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent


  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: reloaded
