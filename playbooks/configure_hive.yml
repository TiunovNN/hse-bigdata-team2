---
- name: Configure hosts
  hosts:
  - namenodes
  tasks:
  - name: Download hive
    ansible.builtin.unarchive:
      src: https://dlcdn.apache.org/hive/hive-4.0.1/apache-hive-4.0.1-bin.tar.gz
      dest: /home/hadoop/
      remote_src: yes
      creates: /home/hadoop/apache-hive-4.0.1-bin
      group: hadoop
      owner: hadoop
    retries: 5
    delay: 3

  - name: Configure hive environment variables in ~/.profile
    ansible.builtin.blockinfile:
      path: /home/hadoop/.profile
      append_newline: true
      prepend_newline: true
      marker: "# {mark} ANSIBLE MANAGED BLOCK HIVE"
      block: |
        export HIVE_HOME=/home/hadoop/apache-hive-4.0.1-bin
        export PATH=$PATH:$HIVE_HOME/bin

  - name: Configure HDFS for Hive
    ansible.builtin.shell: "{{ item }}"
    become: yes
    become_user: hadoop
    become_method: sudo
    become_flags: '-i -S'
    loop:
      - hdfs dfs -mkdir -p /tmp
      - hdfs dfs -mkdir -p /user/hive/warehouse
      - hdfs dfs -chmod g+w /tmp
      - hdfs dfs -chmod g+w /user/hive/warehouse
      - schematool -dbType derby -initOrUpgradeSchema

  - name: Create hive.service
    ansible.builtin.copy:
      src: ./hive.service
      dest: /etc/systemd/system/hive.service

  - name: Enable hive service
    ansible.builtin.systemd_service:
      daemon_reload: true
      enabled: true
      name: hive.service
      state: started


- name: Configure nginx
  hosts: jumpnodes
  vars:
    services:
    - {port: 10002, name: 'hive'}
    namenode: "{{ groups['namenodes'] | map('extract', hostvars, 'ansible_hostname') | first}}"
  tasks:
    - name: configure /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: ".*{{ hostvars[item]['ansible_hostname'] }}$"
        line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item]['ansible_hostname'] }} {{hostvars[item]['ansible_fqdn'] }}"
        state: present
      with_items: "{{ groups['namenodes']}}"

    - name: Ensure installed nginx
      ansible.builtin.package:
        name:
          - nginx
        state: latest

    - name: Configure proxy
      ansible.builtin.template:
        src: ./nginx.j2
        dest: "/etc/nginx/sites-available/{{ item.name }}"
      with_items: "{{ services }}"
      notify: Restart nginx

    - name: Enable proxy
      ansible.builtin.file:
        src: "/etc/nginx/sites-available/{{ item.name}}"
        dest: "/etc/nginx/sites-enabled/{{ item.name }}"
        state: link
      with_items: "{{ services }}"
      notify: Restart nginx

    - name: Disable default
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent


  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: reloaded
